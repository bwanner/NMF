//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace NMF.Interop.Ecore
{
    
    
    /// <summary>
    /// The public interface for EGenericType
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(EGenericType))]
    [XmlDefaultImplementationTypeAttribute(typeof(EGenericType))]
    public interface IEGenericType : IModelElement
    {
        
        /// <summary>
        /// The eUpperBound property
        /// </summary>
        IEGenericType EUpperBound
        {
            get;
            set;
        }
        
        /// <summary>
        /// The eTypeArguments property
        /// </summary>
        IListExpression<IEGenericType> ETypeArguments
        {
            get;
        }
        
        /// <summary>
        /// The eLowerBound property
        /// </summary>
        IEGenericType ELowerBound
        {
            get;
            set;
        }
        
        /// <summary>
        /// The eTypeParameter property
        /// </summary>
        IETypeParameter ETypeParameter
        {
            get;
            set;
        }
        
        /// <summary>
        /// The eClassifier property
        /// </summary>
        IEClassifier EClassifier
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired when the EUpperBound property changed its value
        /// </summary>
        event EventHandler<ValueChangedEventArgs> EUpperBoundChanged;
        
        /// <summary>
        /// Gets fired when the ELowerBound property changed its value
        /// </summary>
        event EventHandler<ValueChangedEventArgs> ELowerBoundChanged;
        
        /// <summary>
        /// Gets fired when the ETypeParameter property changed its value
        /// </summary>
        event EventHandler<ValueChangedEventArgs> ETypeParameterChanged;
        
        /// <summary>
        /// Gets fired when the EClassifier property changed its value
        /// </summary>
        event EventHandler<ValueChangedEventArgs> EClassifierChanged;
    }
}

